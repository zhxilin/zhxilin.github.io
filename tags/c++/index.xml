<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on ZHXILIN&#39;S BLOG</title>
    <link>https://zhxilin.github.io/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on ZHXILIN&#39;S BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016–2020, zhxilin&#39;s blog; all rights reserved.</copyright>
    <lastBuildDate>Fri, 08 Apr 2022 19:52:39 +0800</lastBuildDate>
    
	<atom:link href="https://zhxilin.github.io/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>编程语言</title>
      <link>https://zhxilin.github.io/post/tech_stack_programming_language/</link>
      <pubDate>Fri, 08 Apr 2022 19:52:39 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack_programming_language/</guid>
      <description></description>
    </item>
    
    <item>
      <title>服务端技术栈知识体系</title>
      <link>https://zhxilin.github.io/post/backend_tech_stack_summary/</link>
      <pubDate>Mon, 13 Dec 2021 10:36:27 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/backend_tech_stack_summary/</guid>
      <description>&lt;p&gt;本人大学专业是软件工程（数字媒体技术），目前从事游戏服务端开发，在工作中经常会进行面试。结合大学计算机知识、工作经历和面试经历，本人总结了适合服务端开发的技术栈知识体系。本系列文章的特点是会重点解析知识背后的原理，不止是停留在使用层面。我认为知其然而不知其所以然是不可取的，我们要在学习实践的过程中搞懂每一个技术点背后的细节，才能称得上掌握了这项技术。阅读本系列文章需要具备一定的计算机基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What&#39;s std::ios::sync_with_stdio(false) and std::cin.tie(nullptr)?</title>
      <link>https://zhxilin.github.io/post/sync_with_stdio_false_cin_tie_null/</link>
      <pubDate>Wed, 05 Aug 2020 10:45:18 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/sync_with_stdio_false_cin_tie_null/</guid>
      <description>You may often see the following calls std::ios::sync_with_stdio(false) and std::cin.tie(nullptr) in some online judge system, such as leetcode, poj, etc. Someone would tell you that these codes are usually used to speed up the execution time. But what is the exact meanings for these codes?
1static auto _ = []() { 2 std::ios::sync_with_stdio(false); 3 std::cin.tie(nullptr); 4 return nullptr; 5}(); These two calls have different meanings that have nonthing to do with performance.</description>
    </item>
    
  </channel>
</rss>