<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZHXILIN&#39;S BLOG</title>
    <link>https://zhxilin.github.io/</link>
    <description>Recent content on ZHXILIN&#39;S BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016–2020, zhxilin&#39;s blog; all rights reserved.</copyright>
    <lastBuildDate>Sun, 10 Apr 2022 10:26:35 +0800</lastBuildDate>
    
	<atom:link href="https://zhxilin.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>服务端技术栈知识体系</title>
      <link>https://zhxilin.github.io/post/tech_stack/summary/</link>
      <pubDate>Mon, 13 Dec 2021 10:36:27 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/summary/</guid>
      <description>&lt;p&gt;本人大学专业是软件工程（数字媒体技术），目前从事游戏服务端开发，在工作中也会经常面试候选人。结合大学计算机知识、工作经验和面试经历，本人总结了适合服务端开发的技术栈知识体系。&lt;/p&gt;
&lt;p&gt;本系列文章的特点是重点解析知识背后的原理，而不止是停留在使用层面。我认为知其然而不知其所以然是不可取的，我们要在学习实践的过程中搞懂每一个技术点背后的细节，才能称得上掌握了这项技术。本系列文章希望能帮助愿意在计算机编程领域挖掘背后原理的同学，同时也不断激励我继续深入学习。&lt;/p&gt;
&lt;p&gt;阅读本系列文章适合具备一定计算机编程基础的同学。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>引用、指针、迭代器的区别？</title>
      <link>https://zhxilin.github.io/post/tech_stack/1_programming_language/modern_c&#43;&#43;/language_base/reference_pointer_iterator/</link>
      <pubDate>Sun, 10 Apr 2022 10:26:35 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/1_programming_language/modern_c&#43;&#43;/language_base/reference_pointer_iterator/</guid>
      <description>&lt;p&gt;引用与指针的异同、指针与迭代器的异同，是一个老生常谈的话题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>什么是POD?</title>
      <link>https://zhxilin.github.io/post/tech_stack/1_programming_language/modern_c&#43;&#43;/language_base/pod/</link>
      <pubDate>Sat, 09 Apr 2022 17:50:42 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/1_programming_language/modern_c&#43;&#43;/language_base/pod/</guid>
      <description>&lt;p&gt;为了兼容C内存的数据类型，C++11提出了POD的概念。什么是POD类型，POD类型有什么作用，本节内容将一一揭晓。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>应用技术</title>
      <link>https://zhxilin.github.io/post/tech_stack/9_application_technology/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:05:07 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/9_application_technology/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>软件工程</title>
      <link>https://zhxilin.github.io/post/tech_stack/8_software_engeering/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:04:53 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/8_software_engeering/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>分布式架构</title>
      <link>https://zhxilin.github.io/post/tech_stack/7_distributed_architecture/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:04:35 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/7_distributed_architecture/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>编译原理</title>
      <link>https://zhxilin.github.io/post/tech_stack/6_compile_principle/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:03:58 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/6_compile_principle/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据库</title>
      <link>https://zhxilin.github.io/post/tech_stack/5_database/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:03:44 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/5_database/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>网络</title>
      <link>https://zhxilin.github.io/post/tech_stack/4_networks/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:03:37 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/4_networks/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>操作系统</title>
      <link>https://zhxilin.github.io/post/tech_stack/3_os/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:03:21 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/3_os/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>数据结构与算法</title>
      <link>https://zhxilin.github.io/post/tech_stack/2_ds_algorithm/summary/</link>
      <pubDate>Fri, 08 Apr 2022 20:02:52 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/2_ds_algorithm/summary/</guid>
      <description></description>
    </item>
    
    <item>
      <title>编程语言</title>
      <link>https://zhxilin.github.io/post/tech_stack/1_programming_language/summary/</link>
      <pubDate>Fri, 08 Apr 2022 19:52:39 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/tech_stack/1_programming_language/summary/</guid>
      <description>&lt;p&gt;编程语言，是计算机科学的基础学科。C++作为一门历史悠久的常青树语言，也在不断与时俱进，注入新的活动，依然是当今最流行最稳定的编程语言之一。&lt;/p&gt;
&lt;p&gt;本章节将重点围绕现代C++、C++并发编程以及C++模板编程等方面展开。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSL certificate and nginx config</title>
      <link>https://zhxilin.github.io/post/ssl_certificate_and_nginx_config/</link>
      <pubDate>Tue, 28 Sep 2021 14:03:54 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/ssl_certificate_and_nginx_config/</guid>
      <description>HTTP, as an application layer protocol, remains focused on presenting information, but cares less about the way this information travels from one place to another. Unfortunaly, this means that HTTP can be intercepted and potentially altered, making both the information and the information receiver vulnerable.
HTTPS protocol is an extension for HTTP. That &amp;ldquo;S&amp;rdquo; stands for Secure and it is powered by Transport Layer Secrurity(TLS), the succesor to Secure Sockets Layer(SSL).</description>
    </item>
    
    <item>
      <title>Solve Slow Access To Gitlab via ssh</title>
      <link>https://zhxilin.github.io/post/solve_slow_access_to_gitlab_via_ssh/</link>
      <pubDate>Wed, 08 Sep 2021 20:20:23 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/solve_slow_access_to_gitlab_via_ssh/</guid>
      <description>I&amp;rsquo;ve deployed a custom gitlab server for my team. I found that it&amp;rsquo;s weired that when clone, pull, push or fetch codes from the gitlab server via SSH, it performs slow response times for each access. But it works perfectly via HTTPS.
After seaching sort of posts, it&amp;rsquo;s pointed that the SSH service of gitlab server enables UseDNS feature by default, which makes it slow to access via SSH.
 While it is possible to run a GitLab instance using only IP addresses, it is often beneficial to use DNS as it is easier for users and is required for HTTPS.</description>
    </item>
    
    <item>
      <title>Update multiple versions of dev tools under Ubuntu</title>
      <link>https://zhxilin.github.io/post/ubuntu_update_alternatives/</link>
      <pubDate>Sun, 15 Aug 2021 15:12:30 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/ubuntu_update_alternatives/</guid>
      <description>Since different projects may require different versions of the same dev tool, we have to install multiple versions of them and provide a way for quick switch. This post introduces how to use update-alternatives command to switch dev tool versions under Ubuntu.
I will take protoc for example.
 ProjectA requires protoc 3.6.1 ProjectB requires protoc 3.17.0  Install multiple versions of protoc  Download different releases for Protocol Buffers  3.</description>
    </item>
    
    <item>
      <title>WSL2 Network Forwarding</title>
      <link>https://zhxilin.github.io/post/wsl2_network_forwarding/</link>
      <pubDate>Tue, 20 Jul 2021 10:21:46 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/wsl2_network_forwarding/</guid>
      <description>With the WSL2 Released, Microsoft has made a big change on the system architecture, including changing from the default bridged network adapter to a hyper-v virtual network adapter.
The new version of WSL is built on Hyper-V, which provides independent virtual network adapter for the virtual matchine. Therefore, WSL2 cannot share the network with host directly. The work around is to forward the TCP ports of WSL2 to the host OS.</description>
    </item>
    
    <item>
      <title>What&#39;s std::ios::sync_with_stdio(false) and std::cin.tie(nullptr)?</title>
      <link>https://zhxilin.github.io/post/sync_with_stdio_false_cin_tie_null/</link>
      <pubDate>Wed, 05 Aug 2020 10:45:18 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/sync_with_stdio_false_cin_tie_null/</guid>
      <description>You may often see the following calls std::ios::sync_with_stdio(false) and std::cin.tie(nullptr) in some online judge system, such as leetcode, poj, etc. Someone would tell you that these codes are usually used to speed up the execution time. But what is the exact meanings for these codes?
1static auto _ = []() { 2 std::ios::sync_with_stdio(false); 3 std::cin.tie(nullptr); 4 return nullptr; 5}(); These two calls have different meanings that have nonthing to do with performance.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zhxilin.github.io/about/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zhxilin.github.io/about/</guid>
      <description>XILIN ZHENG (zhxilin)  Email: zhxilin@live.com Working: 7 years Education: Sun Yat-sen University (CS 2009-2013) Major: Software Engineering GitHub: https://github.com/zhxilin Blog: https://zhxilin.github.io  SKILLS  Game Server Dev: C++, C#, Golang, Python, NodeJS App Dev: UWP, WPF, Xamarin, Unity, Qt4(Basic) Database: Redis, MySQL Dev Tools: Vim, Git, VSCode Dev flow: Pull requests, Code review, Tests, Deploy IaaS: AliCloud, Google Cloud  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://zhxilin.github.io/archives/</link>
      <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zhxilin.github.io/archives/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>