<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ZHXILIN&#39;S BLOG</title>
    <link>https://zhxilin.github.io/post/</link>
    <description>Recent content in Posts on ZHXILIN&#39;S BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright © 2016–2020, zhxilin&#39;s blog; all rights reserved.</copyright>
    <lastBuildDate>Wed, 05 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zhxilin.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Solve Slow Access To Gitlab via ssh</title>
      <link>https://zhxilin.github.io/post/solve_slow_access_to_gitlab_via_ssh/</link>
      <pubDate>Sun, 26 Sep 2021 20:20:23 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/solve_slow_access_to_gitlab_via_ssh/</guid>
      <description>I&amp;rsquo;ve deployed a custom gitlab server for my team. I found that it&amp;rsquo;s weired that when clone, pull, push or fetch codes from the gitlab server via SSH, it performs slow response times for each access. But it works perfectly via HTTPS.
After seaching sort of posts, it&amp;rsquo;s pointed that the SSH service of gitlab server enables UseDNS feature by default, which makes it slow to access via SSH.
 While it is possible to run a GitLab instance using only IP addresses, it is often beneficial to use DNS as it is easier for users and is required for HTTPS.</description>
    </item>
    
    <item>
      <title>WSL2 Network Forwarding</title>
      <link>https://zhxilin.github.io/post/wsl2_network_forwarding/</link>
      <pubDate>Fri, 20 Aug 2021 10:21:46 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/wsl2_network_forwarding/</guid>
      <description>With the WSL2 Released, Microsoft has made a big change on the system architecture, including changing from the default bridged network adapter to a hyper-v virtual network adapter.
The new version of WSL is built on Hyper-V, which provides independent virtual network adapter for the virtual matchine. Therefore, WSL2 cannot share the network with host directly. The work around is to forward the TCP ports of WSL2 to the host OS.</description>
    </item>
    
    <item>
      <title>What&#39;s std::ios::sync_with_stdio(false) and std::cin.tie(nullptr)?</title>
      <link>https://zhxilin.github.io/post/sync_with_stdio_false_cin_tie_null/</link>
      <pubDate>Wed, 05 Aug 2020 10:45:18 +0800</pubDate>
      
      <guid>https://zhxilin.github.io/post/sync_with_stdio_false_cin_tie_null/</guid>
      <description>You may often see the following calls std::ios::sync_with_stdio(false) and std::cin.tie(nullptr) in some online judge system, such as leetcode, poj, etc. Someone would tell you that these codes are usually used to speed up the execution time. But what is the exact meanings for these codes?
1static auto _ = []() { 2 std::ios::sync_with_stdio(false); 3 std::cin.tie(nullptr); 4 return nullptr; 5}(); These two calls have different meanings that have nonthing to do with performance.</description>
    </item>
    
  </channel>
</rss>
